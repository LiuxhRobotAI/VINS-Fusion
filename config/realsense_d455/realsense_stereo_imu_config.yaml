%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1
num_of_cam: 2

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "~/Downloads/vins-fusion/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# Transformation: from camera to imu (The most impotant parameters)
# In vins: forward:=y, right:=x;
# Hence, the left/right camara in x should be negative/positive; apply T_ic in Karibr's results
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:  [0.99996238, 0.00511907, 0.00700171, -0.03003918,
           -0.00510823, 0.99998573, -0.00156576, 0.00865478,
           -0.00700963, 0.00152993, 0.99997426, 0.01762583,
           0.0, 0.0, 0.0, 1.0]
   # data:  [0.99996238, 0.00511907, 0.00700171, -0.0375,
   #         -0.00510823, 0.99998573, -0.00156576, 0.0074,
   #         -0.00700963, 0.00152993, 0.99997426, 0.01602,
   #         0.0, 0.0, 0.0, 1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.99995702, 0.00566395, 0.0073408, 0.06529647,
          -0.0056475, 0.9999815, -0.00226062, 0.00818535,
          -0.00735347, 0.00221906, 0.9999705, 0.0175915,
           0.0, 0.0, 0.0, 1.0]
   # data: [0.99995702, 0.00566395, 0.0073408, 0.0575,
   #        -0.0056475, 0.9999815, -0.00226062, 0.0074,
   #        -0.00735347, 0.00221906, 0.9999705, 0.01602,
   #         0.0, 0.0, 0.0, 1.0]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# In fact, for low-cost IMU, even 10x error doesn't show too much impact (but it should be; don't, worry)
acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805       # gravity magnitude # 9.72

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/Downloads/vins-fusion/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
